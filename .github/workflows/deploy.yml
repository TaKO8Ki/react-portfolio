name: Deploy

on: 
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.x]

    steps:
    - uses: actions/checkout@v1
    - name: use node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: yarn install, build
      run: |
        yarn install --frozen-lockfile
        yarn build
    - name: upload build files
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: build/
    - name: upload scripts
      uses: actions/upload-artifact@v1
      with:
        name: scripts
        path: bin/
    - name: upload Dockerfile
      uses: actions/upload-artifact@v1
      with:
        name: scripts
        path: Dockerfile
    - name: upload docker-compose.yml
      uses: actions/upload-artifact@v1
      with:
        name: scripts
        path: docker-compose.yml

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: download build files
      uses: actions/download-artifact@v1
      with:
        name: build
    - name: download scripts
      uses: actions/download-artifact@v1
      with:
        name: scripts
    - name: 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.KNOWN_HOSTS }}
        username: TaKO8Ki
        key: ${{ secrets.SSH_KEY }}
        script: ls
    - name: docker login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: docker build, push image
      env:
        PORT: 5000
      run: |
        mv scripts/docker-compose.yml ../
        mv scripts/Dockerfile ../
        bash ./scripts/deploy.sh
    # - name: send docker-compose.yml
    #   uses: appleboy/scp-action@master
    #   env:
    #     HOST: ${{ secrets.KNOWN_HOSTS }}
    #     USERNAME: TaKO8Ki
    #     KEY: ${{ secrets.SSH_KEY }}
    #   with:
    #     source: "scripts/docker-compose.yml"
    #     target: "services/react-portfolio/"
